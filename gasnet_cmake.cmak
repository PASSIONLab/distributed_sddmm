set(GASNET_PREFIX /usr/common/ftg/upcxx/2020.10.0/craype-2.6.2/hsw/gnu/PrgEnv-gnu-6.0.5-8.3.0/gasnet.opt)

# ----------------------------------------------------------------------
# conduit-overridable variables 

set(GASNET_LD_OVERRIDE /opt/cray/pe/craype/2.6.2/bin/cc)
# set(GASNET_LDFLAGS_OVERRIDE -O3 --param max-inline-insns-single=35000 --param inline-unit-growth=10000 --param large-function-growth=200000  -Wno-format -Wno-unused -Wunused-result -Wno-unused-parameter -Wno-address)
set(GASNET_LDFLAGS_OVERRIDE -O3 -Wno-unused -Wunused-result -Wno-unused-parameter -Wno-address)

# NOTE: conduits setting GASNET_LD(FLAGS)_OVERRIDE should ALSO set corresponding
# GASNET_LD_REQUIRES_* feature flags, for consumption by clients who 
# do not or cannot directly consume GASNET_LD.

# ----------------------------------------------------------------------
# aries-conduit/conduit.mak settings

set(CONDUIT_LDFLAGS )
set(CONDUIT_LIBS -L/opt/cray/ugni/default/lib64 -lugni -L/opt/cray/udreg/default/lib64 -ludreg -L/opt/cray/pe/pmi/default/lib64 -lpmi)

# aries-conduit currently only supports pmi spawning
set(GASNET_SPAWNER_DEFAULT pmi)
set(GASNET_SPAWNER_PMI 1)
# $Source: bitbucket.org:berkeleylab/gasnet.git/other/fragment-body.mak.in $
# ----------------------------------------------------------------------
# Following section other/fragment-body.mak.  Generated from fragment-body.mak.in by configure.

# ----------------------------------------------------------------------
# Directory-based options

set(GASNET_INCLUDES "-I${GASNET_PREFIX}/include -I${GASNET_PREFIX}/include/aries-conduit ${CONDUIT_INCLUDES} ${CONDUIT_INCLUDES_PAR}")
set(GASNET_LIBDIRS -L${GASNET_PREFIX}/lib)


# ----------------------------------------------------------------------
# C compiler and options

set(GASNET_CC /opt/cray/pe/craype/2.6.2/bin/cc)

# set(GASNET_OPT_CFLAGS -O3 --param max-inline-insns-single=35000 --param inline-unit-growth=10000 --param large-function-growth=200000 ${CONDUIT_OPT_CFLAGS} ${CONDUIT_OPT_CFLAGS_PAR})
set(GASNET_OPT_CFLAGS ${CONDUIT_OPT_CFLAGS} ${CONDUIT_OPT_CFLAGS_PAR})

set(GASNET_MISC_CFLAGS -Wno-format -Wno-unused -Wunused-result -Wno-unused-parameter -Wno-address ${CONDUIT_MISC_CFLAGS} ${CONDUIT_MISC_CFLAGS_PAR})
set(GASNET_MISC_CPPFLAGS ${CONDUIT_MISC_CPPFLAGS} ${CONDUIT_MISC_CPPFLAGS_PAR})
set(GASNET_DEVWARN_CFLAGS -Winline -Wall -Wpointer-arith -Wnested-externs -Wwrite-strings -Wmissing-format-attribute -Winit-self -Wvla -Wexpansion-to-defined -Woverlength-strings -Wclobbered -Wcast-function-type -Wempty-body -Wignored-qualifiers -Wimplicit-fallthrough -Wmissing-parameter-type -Wold-style-declaration -Wuninitialized -Wshift-negative-value -Wno-format-overflow -Wno-format-truncation ${CONDUIT_DEVWARN_CFLAGS} ${CONDUIT_DEVWARN_CFLAGSPAR})

# ----------------------------------------------------------------------
# C++ compiler and optios
# TODO: some options (especially CONDUIT_*) are not distinct from C compiler

set(GASNET_CXX /opt/cray/pe/craype/2.6.2/bin/CC)

set(GASNET_OPT_CXXFLAGS -O2 ${CONDUIT_OPT_CFLAGS} ${CONDUIT_OPT_CFLAGS_PAR})
set(GASNET_MISC_CXXFLAGS -Wno-format -Wno-unused -Wunused-result -Wno-unused-parameter -Wno-address ${CONDUIT_MISC_CFLAGS} ${CONDUIT_MISC_CFLAGS_PAR})
set(GASNET_MISC_CXXCPPFLAGS ${CONDUIT_MISC_CPPFLAGS} ${CONDUIT_MISC_CPPFLAGS_PAR})
set(GASNET_DEVWARN_CXXFLAGS -Wall -Wpointer-arith -Wwrite-strings -Wmissing-format-attribute -Winit-self -Wvla -Wexpansion-to-defined -Woverlength-strings -Wclobbered -Wcast-function-type -Wempty-body -Wignored-qualifiers -Wimplicit-fallthrough -Wuninitialized -Wshift-negative-value -Wno-format-overflow -Wno-format-truncation ${CONDUIT_DEVWARN_CXXFLAGS} ${CONDUIT_DEVWARN_CXXFLAGSPAR})

# ----------------------------------------------------------------------
# Common defines

set(GASNET_EXTRADEFINES_SEQ)
set(GASNET_EXTRADEFINES_PAR -D_REENTRANT)
set(GASNET_EXTRADEFINES_PARSYNC -D_REENTRANT)

set(GASNET_DEFINES "-D_GNU_SOURCE=1 -DGASNET_PAR ${GASNET_EXTRADEFINES_PAR} ${CONDUIT_DEFINES} ${CONDUIT_DEFINES_PAR} ${MANUAL_DEFINES}")

# ----------------------------------------------------------------------
# Documented compilation convenience aliases

set(GASNET_CFLAGS "${GASNET_OPT_CFLAGS} ${GASNET_MISC_CFLAGS} ${MANUAL_CFLAGS}")
set(GASNET_CPPFLAGS "${GASNET_MISC_CPPFLAGS} ${GASNET_DEFINES} ${GASNET_INCLUDES}")

set(GASNET_CXXFLAGS "${GASNET_OPT_CXXFLAGS} ${GASNET_MISC_CXXFLAGS} ${MANUAL_CXXFLAGS}")
set(GASNET_CXXCPPFLAGS "${GASNET_MISC_CXXCPPFLAGS} ${GASNET_DEFINES} ${GASNET_INCLUDES}")

# ----------------------------------------------------------------------
# linker and options

set(GASNET_LD ${GASNET_LD_OVERRIDE})

# linker flags that GASNet clients should use 
set(GASNET_LDFLAGS "${GASNET_LDFLAGS_OVERRIDE}  ${CONDUIT_LDFLAGS} ${CONDUIT_LDFLAGS_PAR} ${MANUAL_LDFLAGS}")

set(GASNET_EXTRALIBS_SEQ)
set(GASNET_EXTRALIBS_PAR -lpthread)
set(GASNET_EXTRALIBS_PARSYNC -lpthread)

# libraries that GASNet clients should append to link line
set(GASNET_LIBS "${GASNET_LIBDIRS} -lgasnet-aries-par ${CONDUIT_LIBS} ${CONDUIT_LIBS_PAR} ${GASNET_EXTRALIBS_PAR} -L/opt/cray/xpmem/default/lib64 -lxpmem -lhugetlbfs -L/opt/gcc/8.3.0/snos/lib/gcc/x86_64-suse-linux/8.3.0 -lgcc -lm ${MANUAL_LIBS}")

# ----------------------------------------------------------------------